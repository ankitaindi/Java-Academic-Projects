/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import java.util.stream.Collectors;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Encounter;
import model.EncounterHistory;

/**
 *
 * @author ankitaindi
 */
public class AbnormalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    
    EncounterHistory history;
    ArrayList<Encounter> abnormalCases = new ArrayList<Encounter>();
    
    ArrayList<Encounter> abnormalHistory1 = new ArrayList<Encounter>();
    ArrayList<Encounter> abnormalHistory2 = new ArrayList<Encounter>();
    ArrayList<Encounter> abnormalHistory3 = new ArrayList<Encounter>();
    
    public AbnormalJPanel(EncounterHistory history) {
        initComponents();
        this.history = history;
        
        Encounter abnormalEncounter = new Encounter();
        for(Encounter encounter : history.getEncounterHistory()) {
            if(encounter.getPatientVitalSigns().getBloodPressure()<80 || encounter.getPatientVitalSigns().getBloodPressure()>140) {
               abnormalCases.add(encounter);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEncounters1 = new javax.swing.JTable();
        labelCommunity = new javax.swing.JLabel();
        textCommunity = new javax.swing.JTextField();
        btnGo = new javax.swing.JButton();
        labelRef = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEncounters2 = new javax.swing.JTable();
        label2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEncounters3 = new javax.swing.JTable();
        label3 = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        labelTitle.setBackground(new java.awt.Color(255, 255, 255));
        labelTitle.setFont(new java.awt.Font("Arial", 1, 42)); // NOI18N
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("ABNORMAL CASES");

        tableEncounters1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255)));
        tableEncounters1.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        tableEncounters1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Age", "House", "Community", "City", "Temperature (in F)", "Pulse", "Blood Pressure", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableEncounters1);

        labelCommunity.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        labelCommunity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelCommunity.setText("Search by Community :");

        textCommunity.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textCommunity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        btnGo.setBackground(new java.awt.Color(0, 153, 153));
        btnGo.setFont(new java.awt.Font("Skia", 1, 16)); // NOI18N
        btnGo.setText("GO!");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        labelRef.setBackground(new java.awt.Color(255, 255, 255));
        labelRef.setFont(new java.awt.Font("Skia", 1, 16)); // NOI18N
        labelRef.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRef.setText("For Reference: Normal Blood Pressure Range is 80 to 140");

        label1.setBackground(new java.awt.Color(255, 255, 255));
        label1.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label1.setText("Age Group: 0 to 18, Abnormal Cases are:");

        tableEncounters2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255)));
        tableEncounters2.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        tableEncounters2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Age", "House", "Community", "City", "Temperature (in F)", "Pulse", "Blood Pressure", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableEncounters2);

        label2.setBackground(new java.awt.Color(255, 255, 255));
        label2.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label2.setText("Age Group: 18 to 44, Abnormal Cases are:");

        tableEncounters3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255)));
        tableEncounters3.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        tableEncounters3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Age", "House", "Community", "City", "Temperature (in F)", "Pulse", "Blood Pressure", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableEncounters3);

        label3.setBackground(new java.awt.Color(255, 255, 255));
        label3.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        label3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label3.setText("Age Group: 44+, Abnormal Cases are:");

        labelTotal.setBackground(new java.awt.Color(255, 255, 255));
        labelTotal.setFont(new java.awt.Font("Skia", 1, 16)); // NOI18N
        labelTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1144, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(label3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(labelCommunity)
                        .addGap(31, 31, 31)
                        .addComponent(textCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGo)))
                .addGap(18, 18, 18)
                .addComponent(labelRef, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(labelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(216, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        // TODO add your handling code here:
        String community = textCommunity.getText();
        if(community.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please enter valid community");
        } else {
            for(Encounter encounter : abnormalCases) {
                boolean communityFound = encounter.getPatient().getCommunity().equalsIgnoreCase(community);
                boolean isAge0to18 = encounter.getPatient().getAge()<=18;
                boolean isAge18to44 = encounter.getPatient().getAge()>18 && encounter.getPatient().getAge()<=44;
                boolean isAge44Plus = encounter.getPatient().getAge()>44;
                
                if(communityFound && isAge0to18) {
                    abnormalHistory1.add(encounter);
                }
                
                if(communityFound && isAge18to44) {
                    abnormalHistory2.add(encounter);
                }
                
                if (communityFound && isAge44Plus) {
                    abnormalHistory3.add(encounter);
                }
            }
            
            int totalAbnormalCases = abnormalHistory1.size() + abnormalHistory2.size() + abnormalHistory3.size();
            
            if(totalAbnormalCases<1) {
                JOptionPane.showMessageDialog(this, "No Abnormal Cases Found");
            } else {
                labelTotal.setText("Total Abnormal cases in " + community + " are: " +  totalAbnormalCases);            
                label1.setText("Age Group: 0 to 18, Abnormal Cases are: " + abnormalHistory1.size());
                label2.setText("Age Group: 18 to 44, Abnormal Cases are: " + abnormalHistory2.size());
                label3.setText("Age Group: 44+, Abnormal Cases are: " + abnormalHistory3.size());
            
                populateTable(tableEncounters1, abnormalHistory1);
                populateTable(tableEncounters2, abnormalHistory2);
                populateTable(tableEncounters3, abnormalHistory3);
                
                JOptionPane.showMessageDialog(this, "Total Abnormal cases in " + community + " are: " +  totalAbnormalCases);
            }    
        }
    }//GEN-LAST:event_btnGoActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel labelCommunity;
    private javax.swing.JLabel labelRef;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JTable tableEncounters1;
    private javax.swing.JTable tableEncounters2;
    private javax.swing.JTable tableEncounters3;
    private javax.swing.JTextField textCommunity;
    // End of variables declaration//GEN-END:variables

    private void populateTable(javax.swing.JTable table, ArrayList<Encounter> history) {
        
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        
        for(Encounter encounter : history) {
            
            Object[] row = new Object[9];
            row[0] = encounter;
            row[1] = encounter.getPatient().getAge();
            row[2] = encounter.getPatient().getHouse();
            row[3] = encounter.getPatient().getCommunity();
            row[4] = encounter.getPatient().getCity();
            row[5] = encounter.getPatientVitalSigns().getTemperature();
            row[6] = encounter.getPatientVitalSigns().getPulse();
            row[7] = encounter.getPatientVitalSigns().getBloodPressure();
            row[8] = encounter.getPatientVitalSigns().getDate();
            
            model.addRow(row);
        }
        
        history.clear();
    }
}
