/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.ButtonGroup;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.VitalSigns;

/**
 *
 * @author ankitaindi
 */
public class ViewVitalSignsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateJPanel
     */
    
    EncounterHistory history;

    public ViewVitalSignsJPanel(EncounterHistory history) {
        initComponents();
        this.history = history;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableEncounters = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        labelErr6 = new javax.swing.JLabel();
        labelErr2 = new javax.swing.JLabel();
        labelErr3 = new javax.swing.JLabel();
        labelErr7 = new javax.swing.JLabel();
        labelErr4 = new javax.swing.JLabel();
        labelErr8 = new javax.swing.JLabel();
        labelErr5 = new javax.swing.JLabel();
        labelErr9 = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelAge = new javax.swing.JLabel();
        labelHouse = new javax.swing.JLabel();
        labelSeats = new javax.swing.JLabel();
        labelYear = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        textAge = new javax.swing.JTextField();
        labelTemperature = new javax.swing.JLabel();
        labelPulse = new javax.swing.JLabel();
        labelBloodPressure = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        textTemperature = new javax.swing.JTextField();
        textPulse = new javax.swing.JTextField();
        textHouse = new javax.swing.JTextField();
        textBloodPressure = new javax.swing.JTextField();
        textCommunity = new javax.swing.JTextField();
        textDate = new javax.swing.JTextField();
        textCity = new javax.swing.JTextField();
        labelErr1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        tableEncounters.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255)));
        tableEncounters.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        tableEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Age", "House", "Community", "City", "Temperature (in F)", "Pulse", "Blood Pressure", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEncounters.setShowGrid(true);
        jScrollPane1.setViewportView(tableEncounters);

        btnUpdate.setBackground(new java.awt.Color(0, 153, 153));
        btnUpdate.setFont(new java.awt.Font("Skia", 1, 16)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setBackground(new java.awt.Color(153, 153, 153));
        btnView.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(153, 153, 153));
        btnDelete.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        labelErr6.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr6.setForeground(java.awt.Color.red);

        labelErr2.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr2.setForeground(java.awt.Color.red);

        labelErr3.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr3.setForeground(java.awt.Color.red);

        labelErr7.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr7.setForeground(java.awt.Color.red);

        labelErr4.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr4.setForeground(java.awt.Color.red);

        labelErr8.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr8.setForeground(java.awt.Color.red);

        labelErr5.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr5.setForeground(java.awt.Color.red);

        labelErr9.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        labelErr9.setForeground(java.awt.Color.red);

        labelName.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelName.setText("Patient Name :");

        labelAge.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelAge.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelAge.setText("Age :");

        labelHouse.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelHouse.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelHouse.setText("House :");

        labelSeats.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelSeats.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelSeats.setText("Community :");

        labelYear.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelYear.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelYear.setText("City :");

        textName.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textNameFocusLost(evt);
            }
        });

        textAge.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textAgeFocusLost(evt);
            }
        });

        labelTemperature.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelTemperature.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelTemperature.setText("Temperature (in F) :");

        labelPulse.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelPulse.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPulse.setText("Pulse :");

        labelBloodPressure.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelBloodPressure.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelBloodPressure.setText("Blood Pressure :");

        labelDate.setFont(new java.awt.Font("Sana", 1, 16)); // NOI18N
        labelDate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelDate.setText("Date :");

        textTemperature.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textTemperature.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textTemperature.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textTemperatureFocusLost(evt);
            }
        });

        textPulse.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textPulse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textPulse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textPulseFocusLost(evt);
            }
        });

        textHouse.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textHouse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textHouse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textHouseFocusLost(evt);
            }
        });

        textBloodPressure.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textBloodPressure.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textBloodPressure.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textBloodPressureFocusLost(evt);
            }
        });

        textCommunity.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textCommunity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textCommunity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textCommunityFocusLost(evt);
            }
        });

        textDate.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textDateFocusLost(evt);
            }
        });

        textCity.setFont(new java.awt.Font("Skia", 0, 16)); // NOI18N
        textCity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        textCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textCityFocusLost(evt);
            }
        });

        labelErr1.setFont(new java.awt.Font("Skia", 1, 14)); // NOI18N
        labelErr1.setForeground(java.awt.Color.red);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        labelTitle.setBackground(new java.awt.Color(153, 204, 255));
        labelTitle.setFont(new java.awt.Font("Skia", 1, 42)); // NOI18N
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("PATIENT VITAL SIGNS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(labelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(labelTitle)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(462, 462, 462)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(labelSeats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textAge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textCity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelErr5, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelErr4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelErr3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelErr2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelErr1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(labelDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelBloodPressure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPulse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelErr9, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelErr8, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelErr7, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelErr6, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(labelErr1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAge)
                    .addComponent(textAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHouse)
                    .addComponent(textHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelYear, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTemperature)
                    .addComponent(textTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPulse)
                    .addComponent(textPulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBloodPressure)
                    .addComponent(textBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErr9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        if(labelErr1.getText().equals("") && labelErr2.getText().equals("") && labelErr3.getText().equals("") && 
                labelErr4.getText().equals("") && labelErr5.getText().equals("") && labelErr6.getText().equals("") &&
                labelErr7.getText().equals("") && labelErr8.getText().equals("") && labelErr9.getText().equals("")) {
            
            String name = textName.getText();
            int age = Integer.parseInt(textAge.getText());
            String house = textHouse.getText();
            String community = textCommunity.getText();
            String city = textCity.getText();
            int temperature = Integer.parseInt(textTemperature.getText());
            int pulse = Integer.parseInt(textPulse.getText());
            int bloodPressure = Integer.parseInt(textBloodPressure.getText());
            String date = textDate.getText();
        
            Encounter encounter = history.updateEncounter(tableEncounters.getSelectedRow());
            
            Patient newPatient = new Patient();
            newPatient.setName(name);
            newPatient.setAge(age);
            newPatient.setHouse(house);
            newPatient.setCommunity(community);
            newPatient.setCity(city);
            encounter.setPatient(newPatient);
            
            VitalSigns newVitalSigns = new VitalSigns(temperature, pulse, bloodPressure, date);
            encounter.setVitalSigns(newVitalSigns);
            
        
            JOptionPane.showMessageDialog(this, "Patient details updated succesfully");
            populateTable();
        
            textName.setText("");
            textAge.setText("");
            textHouse.setText("");
            textCommunity.setText("");
            textCity.setText("");
            textTemperature.setText("");
            textPulse.setText("");
            textBloodPressure.setText("");
            textDate.setText("");
            
        } else {
            JOptionPane.showMessageDialog(this, "Please enter valid details!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableEncounters.getSelectedRow();
        
        if(selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tableEncounters.getModel();
        Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);
        
        history.deleteEncounter(selectedEncounter);
        JOptionPane.showMessageDialog(this, "Patient details deleted succesfully");
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableEncounters.getSelectedRow();
        
        if(selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tableEncounters.getModel();
        Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);
        
        textName.setText(selectedEncounter.getPatient().getName());
        textAge.setText(String.valueOf(selectedEncounter.getPatient().getAge()));
        textHouse.setText(selectedEncounter.getPatient().getHouse());
        textCommunity.setText(selectedEncounter.getPatient().getCommunity());
        textCity.setText(selectedEncounter.getPatient().getCity());
        textTemperature.setText(String.valueOf(selectedEncounter.getPatientVitalSigns().getTemperature()));
        textPulse.setText(String.valueOf(selectedEncounter.getPatientVitalSigns().getPulse()));
        textBloodPressure.setText(String.valueOf(selectedEncounter.getPatientVitalSigns().getBloodPressure()));
        textDate.setText(selectedEncounter.getPatientVitalSigns().getDate());      
    }//GEN-LAST:event_btnViewActionPerformed

    private void textNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textNameFocusLost
        // TODO add your handling code here:
        validateLength(textName, labelErr1);
    }//GEN-LAST:event_textNameFocusLost

    private void textAgeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textAgeFocusLost
        // TODO add your handling code here:
        validateNumbers(textAge, labelErr2, "Age");
        
        int age = Integer.parseInt(textAge.getText());
        if(age<1 || age>120) {
            labelErr2.setText("Age can be between 1 to 120");
        }
    }//GEN-LAST:event_textAgeFocusLost

    private void textTemperatureFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textTemperatureFocusLost
        // TODO add your handling code here:
        validateNumbers(textTemperature, labelErr6, "Temperature");
        
        int temperature = Integer.parseInt(textTemperature.getText());
        if(temperature<90 || temperature>110) {
            labelErr6.setText("Temperature can be between 90 to 110");
        }
    }//GEN-LAST:event_textTemperatureFocusLost

    private void textPulseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textPulseFocusLost
        // TODO add your handling code here:
        validateNumbers(textPulse, labelErr7, "Pulse");
    }//GEN-LAST:event_textPulseFocusLost

    private void textHouseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textHouseFocusLost
        // TODO add your handling code here:
        validateLength(textHouse, labelErr3);
    }//GEN-LAST:event_textHouseFocusLost

    private void textBloodPressureFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textBloodPressureFocusLost
        // TODO add your handling code here:
        validateNumbers(textBloodPressure, labelErr8, "Blood Pressure");
    }//GEN-LAST:event_textBloodPressureFocusLost

    private void textCommunityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textCommunityFocusLost
        // TODO add your handling code here:
        validateLength(textHouse, labelErr4);
    }//GEN-LAST:event_textCommunityFocusLost

    private void textDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textDateFocusLost
        // TODO add your handling code here:
        validateDate();
    }//GEN-LAST:event_textDateFocusLost

    private void textCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textCityFocusLost
        // TODO add your handling code here:
        validateLength(textHouse, labelErr5);
    }//GEN-LAST:event_textCityFocusLost

    private void validateLength(JTextField textField, JLabel label) {
        if(textField.getText().isBlank()) {
            label.setText("Field cannot be blank");
        } else {
            label.setText("");
        }
    }
    
    private void validateNumbers(JTextField textField, JLabel label, String msg) {
        if(!textField.getText().matches("[0-9]{1,3}")) {
            label.setText("Enter valid " + msg);
        } else {
            label.setText("");
        }
    }
    
    private void validateDate() {
        if(!textDate.getText().matches("^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$")) {
            labelErr9.setText("Enter Date in MM/DD/YYYY format");
        } else {
            labelErr9.setText("");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAge;
    private javax.swing.JLabel labelBloodPressure;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelErr1;
    private javax.swing.JLabel labelErr2;
    private javax.swing.JLabel labelErr3;
    private javax.swing.JLabel labelErr4;
    private javax.swing.JLabel labelErr5;
    private javax.swing.JLabel labelErr6;
    private javax.swing.JLabel labelErr7;
    private javax.swing.JLabel labelErr8;
    private javax.swing.JLabel labelErr9;
    private javax.swing.JLabel labelHouse;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPulse;
    private javax.swing.JLabel labelSeats;
    private javax.swing.JLabel labelTemperature;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelYear;
    private javax.swing.JTable tableEncounters;
    private javax.swing.JTextField textAge;
    private javax.swing.JTextField textBloodPressure;
    private javax.swing.JTextField textCity;
    private javax.swing.JTextField textCommunity;
    private javax.swing.JTextField textDate;
    private javax.swing.JTextField textHouse;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPulse;
    private javax.swing.JTextField textTemperature;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tableEncounters.getModel();
        model.setRowCount(0);
        
        for(Encounter encounter : history.getEncounterHistory()) {
            
            Object[] row = new Object[9];
            row[0] = encounter;
            row[1] = encounter.getPatient().getAge();
            row[2] = encounter.getPatient().getHouse();
            row[3] = encounter.getPatient().getCommunity();
            row[4] = encounter.getPatient().getCity();
            row[5] = encounter.getPatientVitalSigns().getTemperature();
            row[6] = encounter.getPatientVitalSigns().getPulse();
            row[7] = encounter.getPatientVitalSigns().getBloodPressure();
            row[8] = encounter.getPatientVitalSigns().getDate();
            
            model.addRow(row);
        }
    }
}
