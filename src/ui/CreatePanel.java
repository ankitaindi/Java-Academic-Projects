/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
//import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.Person;

/**
 *
 * @author ankitaindi
 */
public class CreatePanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatePanel
     */
    
    Person person;
    private boolean isInValid=true;
    public Integer digiCount;
    public Integer ssnLenCount = 0;
    public String digiTelephoneError = "";
    public String  doBError="";
    public String digiCellError = "";
    public String NameError = "";
    public String ssnError = "";
    public String ipAddressError = "";
    public String emailAddressError = "";
    
    public CreatePanel(Person person) {
        initComponents();
        this.person=person;
    }
    
    private void ValidateName() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        if(textname.getText().isEmpty()){
            //isInValid = true;
            NameError = "Name";
        }
        else{
            NameError = "";
        }
    
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbllicenseplate = new javax.swing.JLabel();
        lblDeviceidentifier = new javax.swing.JLabel();
        lblLinkedin = new javax.swing.JLabel();
        lblinternetprotocoladdr = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        lbluniquenumber = new javax.swing.JLabel();
        textname = new javax.swing.JTextField();
        texthealthplan = new javax.swing.JTextField();
        textgeographicData = new javax.swing.JTextField();
        textbankaccountnumber = new javax.swing.JTextField();
        textdoB = new javax.swing.JTextField();
        textlicensenumber = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        texttelephonenum = new javax.swing.JTextField();
        lblGeographicdata = new javax.swing.JLabel();
        textfaxnumber = new javax.swing.JTextField();
        lblDob = new javax.swing.JLabel();
        textemail = new javax.swing.JTextField();
        textvehicleserialnum = new javax.swing.JTextField();
        lblTelephonenum = new javax.swing.JLabel();
        textSSN = new javax.swing.JTextField();
        textdeviceidentifier = new javax.swing.JTextField();
        lblFaxnum = new javax.swing.JLabel();
        textMedicalNumber = new javax.swing.JTextField();
        textlinkedin = new javax.swing.JTextField();
        lblemail = new javax.swing.JLabel();
        lblSSN = new javax.swing.JLabel();
        lblmedicalrecordnum = new javax.swing.JLabel();
        lblhealthplannumber = new javax.swing.JLabel();
        JLabeltitle = new javax.swing.JLabel();
        textprotocoladdress = new javax.swing.JTextField();
        textuniqueidentifyingnumber = new javax.swing.JTextField();
        lblbankaccountnumber = new javax.swing.JLabel();
        lblLicensenumber = new javax.swing.JLabel();
        textbutn = new javax.swing.JButton();
        lblNameVali = new javax.swing.JLabel();
        lblGeographicvali = new javax.swing.JLabel();
        lblphnovali = new javax.swing.JLabel();
        lblfaxvali = new javax.swing.JLabel();
        lblemailvali = new javax.swing.JLabel();
        lblipvali = new javax.swing.JLabel();
        lbllinkedinvali = new javax.swing.JLabel();
        lbldobvali = new javax.swing.JLabel();
        lblssnvali = new javax.swing.JLabel();
        lbllicensevali = new javax.swing.JLabel();
        lblhealthvali = new javax.swing.JLabel();
        lblbanknumvali = new javax.swing.JLabel();
        lblmedicalvali = new javax.swing.JLabel();
        lblserialvali = new javax.swing.JLabel();
        lbldevicevali = new javax.swing.JLabel();

        lbllicenseplate.setText("Vehicle SerialNumber:");

        lblDeviceidentifier.setText("Device Identifier:");

        lblLinkedin.setText("LinkedIn:");

        lblinternetprotocoladdr.setText("Internet Protocol Address:");

        lblPhoto.setText("Photo:");

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        btnsave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnsaveKeyPressed(evt);
            }
        });

        lbluniquenumber.setText("Unique identifying Number:");

        textname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textnameActionPerformed(evt);
            }
        });
        textname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textnameKeyPressed(evt);
            }
        });

        texthealthplan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                texthealthplanKeyPressed(evt);
            }
        });

        textgeographicData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textgeographicDataKeyPressed(evt);
            }
        });

        textbankaccountnumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textbankaccountnumberKeyPressed(evt);
            }
        });

        textdoB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textdoBKeyPressed(evt);
            }
        });

        textlicensenumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textlicensenumberKeyPressed(evt);
            }
        });

        lblName.setText("Name:");

        texttelephonenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texttelephonenumActionPerformed(evt);
            }
        });
        texttelephonenum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                texttelephonenumKeyPressed(evt);
            }
        });

        lblGeographicdata.setText("Geographic Data:");

        textfaxnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfaxnumberActionPerformed(evt);
            }
        });
        textfaxnumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textfaxnumberKeyPressed(evt);
            }
        });

        lblDob.setText("Date of Birth:");

        textemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textemailKeyPressed(evt);
            }
        });

        textvehicleserialnum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textvehicleserialnumKeyPressed(evt);
            }
        });

        lblTelephonenum.setText("Telephone Number:");

        textSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSSNActionPerformed(evt);
            }
        });
        textSSN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textSSNKeyPressed(evt);
            }
        });

        textdeviceidentifier.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textdeviceidentifierKeyPressed(evt);
            }
        });

        lblFaxnum.setText("Fax Number:");

        textMedicalNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textMedicalNumberKeyPressed(evt);
            }
        });

        textlinkedin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textlinkedinKeyPressed(evt);
            }
        });

        lblemail.setText("Email:");

        lblSSN.setText("SSN:");

        lblmedicalrecordnum.setText("Medical Record Number:");

        lblhealthplannumber.setText("Health Plan Beneficiary Number:");

        JLabeltitle.setFont(new java.awt.Font("Palatino", 0, 18)); // NOI18N
        JLabeltitle.setText(" User Profile");

        textprotocoladdress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textprotocoladdressActionPerformed(evt);
            }
        });
        textprotocoladdress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textprotocoladdressKeyPressed(evt);
            }
        });

        textuniqueidentifyingnumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textuniqueidentifyingnumberKeyPressed(evt);
            }
        });

        lblbankaccountnumber.setText("Bank Account Number:");

        lblLicensenumber.setText("License Number:");

        textbutn.setText("Upload");
        textbutn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textbutnActionPerformed(evt);
            }
        });
        textbutn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textbutnKeyPressed(evt);
            }
        });

        lblGeographicvali.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblGeographicvaliKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(JLabeltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblemail)
                    .addComponent(lblmedicalrecordnum)
                    .addComponent(lbllicenseplate)
                    .addComponent(lbluniquenumber)
                    .addComponent(lblPhoto)
                    .addComponent(lblinternetprotocoladdr)
                    .addComponent(lblLinkedin)
                    .addComponent(lblDeviceidentifier)
                    .addComponent(lblhealthplannumber)
                    .addComponent(lblLicensenumber)
                    .addComponent(lblbankaccountnumber)
                    .addComponent(lblSSN)
                    .addComponent(lblFaxnum)
                    .addComponent(lblTelephonenum)
                    .addComponent(lblGeographicdata)
                    .addComponent(lblName)
                    .addComponent(lblDob))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textuniqueidentifyingnumber)
                    .addComponent(textprotocoladdress)
                    .addComponent(textlinkedin)
                    .addComponent(textdeviceidentifier)
                    .addComponent(textvehicleserialnum)
                    .addComponent(textlicensenumber)
                    .addComponent(textbankaccountnumber)
                    .addComponent(texthealthplan)
                    .addComponent(textMedicalNumber)
                    .addComponent(textSSN)
                    .addComponent(textemail)
                    .addComponent(textfaxnumber)
                    .addComponent(texttelephonenum)
                    .addComponent(textdoB)
                    .addComponent(textgeographicData)
                    .addComponent(textbutn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textname, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblbanknumvali)
                            .addComponent(lblhealthvali))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblGeographicvali))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblphnovali)
                                    .addComponent(lblNameVali)
                                    .addComponent(lblfaxvali)
                                    .addComponent(lblemailvali)
                                    .addComponent(lbllinkedinvali)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(lbldobvali))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(lblssnvali))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbllicensevali)
                                    .addComponent(lblipvali))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblmedicalvali)
                            .addComponent(lblserialvali)
                            .addComponent(lbldevicevali))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(JLabeltitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNameVali)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGeographicdata)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textgeographicData, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblGeographicvali)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDob, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textdoB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbldobvali))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(texttelephonenum, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblphnovali))
                            .addComponent(lblTelephonenum))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFaxnum)
                            .addComponent(textfaxnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblfaxvali))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblemail)
                            .addComponent(textemail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblemailvali))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSSN)
                            .addComponent(textSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblssnvali))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textMedicalNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmedicalrecordnum)
                    .addComponent(lblmedicalvali))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(texthealthplan, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblhealthvali))
                            .addComponent(lblhealthplannumber, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(lblbankaccountnumber)
                        .addGap(18, 18, 18)
                        .addComponent(lblLicensenumber))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textbankaccountnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblbanknumvali))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textlicensenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbllicensevali))))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbllicenseplate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textvehicleserialnum, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblserialvali))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeviceidentifier)
                    .addComponent(textdeviceidentifier, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbldevicevali))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLinkedin)
                    .addComponent(textlinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbllinkedinvali))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblinternetprotocoladdr)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textprotocoladdress, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblipvali)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textbutn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoto))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbluniquenumber)
                    .addComponent(textuniqueidentifyingnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsave)
                .addContainerGap(9, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void ipAddress(){
         String ipAddress = "^((0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)\\.){3}(0|1\\d?\\d?|2[0-4]?\\d?|25[0-5]?|[3-9]\\d?)$";
        if (!textprotocoladdress.getText().matches(ipAddress)){
            isInValid = true;
            textprotocoladdress.setEditable(false);
            lblipvali.setText ("IPAddress is incorrect") ;
        }
        else{
            textprotocoladdress.setEditable(true);

            lblipvali.setText (" ") ;
        }
    }
    
    private void ValidateDOB(){
            SimpleDateFormat dateofbirth = new SimpleDateFormat("MM/dd/yyyy");
            dateofbirth.setLenient(false);
            /* Create Date object
             * parse the string into date 
             */
            try
            {
                Date javaDate = dateofbirth.parse(textdoB.getText()); 
            }
            /* Date format is invalid */
            catch (Exception e)
            {
                lbldobvali.setText("Invalid Format. Allowed MM/DD/YYYY");
                isInValid = true;
                doBError = "Date Of Birth";
        }
    }
    
    
    
    private void texttelephonenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texttelephonenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texttelephonenumActionPerformed

    private void textfaxnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfaxnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfaxnumberActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:    
        
       
        ValidateName();
        ValidateDOB();
       validateEmailID();
               // Validations for text fields
        if (NameError == "Name" || 
                doBError == "Date Of Birth" ||  
                emailAddressError == "emailAddressEmpty" || emailAddressError == "emailAddress"
                ){   

                    if(NameError == "Name") {
                        lblNameVali.setText("Please Enter you Name");
                    }
               
                    if(doBError == "Date Of Birth"){
                        lbldobvali.setText("Invalid Format, Please enter only   MM/DD/YYYY format" );
                    }
                    
                    if(emailAddressError == "emailAddressEmpty"){
                        lblemailvali.setText("Email address cannot be empty");
                    }
                    if(emailAddressError == "emailAddress"){
                        lblemailvali.setText("Please enter valid  Email Address");
                    }
                   
                    NameError = "";
//                    doBError = "";
//                    ipAddressError = "";
//                    emailAddressError = "";
        }       
         else{
            
            ValidateName();
            
             //NameError = "";
            //System.out.println("not in if block");
          person.setName(textname.getText());
          person.setGeographicdata(textgeographicData.getText());
          person.setDob(textdoB.getText());
          person.setTelephonenum(texttelephonenum.getText());
          person.setFaxnum(textfaxnumber.getText());
          person.setEmailID(textemail.getText());
          person.setSSN(textSSN.getText());
          person.setMedicalrecordnum((textMedicalNumber.getText()));
          person.setHealthplannum((texthealthplan.getText()));
          person.setBankaccnum((textbankaccountnumber.getText()));
          person.setLicensenum((textlicensenumber.getText()));
          person.setVehiclelicensenum((textlicensenumber.getText()));
          person.setDeviceidentifier((textdeviceidentifier.getText()));
          person.setLinkedin(textlinkedin.getText());
          person.setInternetprotocaladdr(textprotocoladdress.getText());
          person.setUniqueidentifier(textuniqueidentifyingnumber.getText());
          
        JOptionPane.showMessageDialog(this, "User Information Saved");
        }
    }//GEN-LAST:event_btnsaveActionPerformed
    
    private void textbutnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textbutnActionPerformed
        // TODO add your handling code here:
        Imageverification id = new Imageverification();
        String path = id.imageupload();
        person.setPath(path);
       
    }//GEN-LAST:event_textbutnActionPerformed

    private void texttelephonenumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texttelephonenumKeyPressed
        // TODO add your handling code here:
        
        //action when key is pressed
        //getfieldvalue string
        String Telephonenum=texttelephonenum.getText();
        //get length of a string
        int length =Telephonenum.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if (length<10){
                //editable true
                texttelephonenum.setEditable(true);
                lblphnovali.setText("Please enter Phone No only!");
            }else{
                //not editable for length more than 10 digits 
                texttelephonenum.setEditable(false);
                lblphnovali.setText(" ");
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                texttelephonenum.setEditable(true);
                
            }else{
                texttelephonenum.setEditable(false);
            }
                
            
            
        }
           
        
    }//GEN-LAST:event_texttelephonenumKeyPressed

    private void textemailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textemailKeyPressed
        // TODO add your handling code here:
        
         String emailAddress = "^[\\w-\\.+]*[\\w-\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
         if (!textemail.getText().isEmpty() && !textemail.getText().matches(emailAddress)){
                //isInValid = true;       
                lblemailvali .setText("Please enter correct Email ID") ; 
                
                    }
         else{
             lblemailvali .setText(" ") ; 
             
         }

    }//GEN-LAST:event_textemailKeyPressed

    private void textSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSSNActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_textSSNActionPerformed

    private void textSSNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSSNKeyPressed
        // TODO add your handling code here:
          
        //action when key is pressed
        //getfieldvalue string                                
       
        String SSN=textSSN.getText();
        //get length of a string
        int length =SSN.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='8'){
            if (length<10){
                //editable true
                textSSN.setEditable(true);
                lblssnvali.setText("Please enter SSN Number only!");
            }else{
                //not editable for length more than 10 digits 
                textSSN.setEditable(false);
                lblssnvali.setText("");
                
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textSSN.setEditable(true);
                
            }else{
                textSSN.setEditable(false);
            }
                
            
           }
           
        
    }//GEN-LAST:event_textSSNKeyPressed

    private void textnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textnameActionPerformed

    private void textnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textnameKeyPressed
        // TODO add your handling code here:
        
        //code to accept only Alphabets 
        
        // TO DO add your handling code here:
 
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            textname.setEditable(false);
            lblNameVali.setText("Please enter letters only!");
        }
        else
        {
            textname.setEditable(true);
            lblNameVali.setText(""); // To disable the warnings once user feed correct character
        }
    
        
    }//GEN-LAST:event_textnameKeyPressed

    private void textfaxnumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfaxnumberKeyPressed
        // TODO add your handling code here:
           String faxnum=textfaxnumber.getText();
        //get length of a string
        int length =faxnum.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if (length<10){
                //editable true
                textfaxnumber.setEditable(true);
                lblfaxvali.setText("Please enter Fax Number only!");
            }else{
                //not editable for length more than 10 digits 
                textfaxnumber.setEditable(false);
                lblfaxvali.setText(" ");
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textfaxnumber.setEditable(true);
                
            }else{
                textfaxnumber.setEditable(false);
            }
                
            
            
        }
        
        
        
    }//GEN-LAST:event_textfaxnumberKeyPressed

    private void textMedicalNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMedicalNumberKeyPressed
        // TODO add your handling code here:
        
        
        String medicalnum=textMedicalNumber.getText();
        //get length of a string
        int length =medicalnum.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if (length<10){
                //editable true
                textMedicalNumber.setEditable(true);
                lblmedicalvali.setText("Please enter Medical number only!");
            }else{
                //not editable for length more than 10 digits 
                textMedicalNumber.setEditable(false);
                lblmedicalvali.setText("Please enter Medical number only!");
                
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textMedicalNumber.setEditable(true);
                
            }else{
                textMedicalNumber.setEditable(false);
            }
                
            
           }
    }//GEN-LAST:event_textMedicalNumberKeyPressed

    private void texthealthplanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texthealthplanKeyPressed
        // TODO add your handling code here:
        
        
            
        String healthplan=texthealthplan.getText();
        //get length of a string
        int length =healthplan.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if (length<10){
                //editable true
                texthealthplan.setEditable(true);
                //lblhealthvali.setText("Please enter Health  Plan number only!");
            }else{
                //not editable for length more than 10 digits 
                texthealthplan.setEditable(false);
                //lblhealthvali.setText("");
                
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                texthealthplan.setEditable(true);
                
            }else{
                texthealthplan.setEditable(false);
            }
                
            
           }
    }//GEN-LAST:event_texthealthplanKeyPressed

    private void textbankaccountnumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textbankaccountnumberKeyPressed
        // TODO add your handling code here:
        
        
        String bankaccnum=textbankaccountnumber.getText();
        //get length of a string
        int length =bankaccnum.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if (length<10){
                //editable true
                textbankaccountnumber.setEditable(true);
                //lblbanknumvali.setText("Please enter Bank Account Number only!");
            }else{
                //not editable for length more than 10 digits 
                textbankaccountnumber.setEditable(false);
                //lblhealthvali.setText("");
                
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textbankaccountnumber.setEditable(true);
                
            }else{
                textbankaccountnumber.setEditable(false);
            }
                
            
           }
    }//GEN-LAST:event_textbankaccountnumberKeyPressed

    private void textlicensenumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textlicensenumberKeyPressed
        // TODO add your handling code here:
        
           String licensenumber=textlicensenumber.getText();
        //get length of a string
        int length =licensenumber.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if (length<10){
                //editable true
                textlicensenumber.setEditable(true);
                lbllicensevali.setText("Please enter License Number  only!");
            }else{
                //not editable for length more than 10 digits 
                textlicensenumber.setEditable(false);
                lbllicensevali.setText(" ");
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textlicensenumber.setEditable(true);
                
            }else{
                textlicensenumber.setEditable(false);
            }
                
            
            
        }
        
        
        
    }//GEN-LAST:event_textlicensenumberKeyPressed

    private void textuniqueidentifyingnumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textuniqueidentifyingnumberKeyPressed
        // TODO add your handling code here:
       
        String uniquenumber=textuniqueidentifyingnumber.getText();
        //get length of a string
        int length =uniquenumber.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='8'){
            if (length<10){
                //editable true
                textuniqueidentifyingnumber.setEditable(true);
            }else{
                //not editable for length more than 10 digits 
                textuniqueidentifyingnumber.setEditable(false);
                
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textuniqueidentifyingnumber.setEditable(true);
                
            }else{
                textuniqueidentifyingnumber.setEditable(false);
            }
                   
        }
    }//GEN-LAST:event_textuniqueidentifyingnumberKeyPressed

    private void textlinkedinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textlinkedinKeyPressed
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            textlinkedin.setEditable(false);
            lbllinkedinvali.setText("Please enter Linkedin ID only!");
        }
        else
        {
            textlinkedin.setEditable(true);
            lbllinkedinvali.setText(""); // To disable the warnings once user feed correct character
        }
        
        
        
    }//GEN-LAST:event_textlinkedinKeyPressed

    private void lblGeographicvaliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblGeographicvaliKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblGeographicvaliKeyPressed

    private void textgeographicDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textgeographicDataKeyPressed
        // TODO add your handling code here:
        
        
        char c = evt.getKeyChar();
        if(Character.isDigit(c)){
            textgeographicData.setEditable(false);
            lblGeographicvali.setText("Please enter Geographicdata only!");
        }
        else
        {
            textgeographicData.setEditable(true);
            lblGeographicvali.setText(""); // To disable the warnings once user feed correct character
        }
        
        
    }//GEN-LAST:event_textgeographicDataKeyPressed

    private void btnsaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnsaveKeyPressed
        // TODO add your handling code here:
        
          
    }//GEN-LAST:event_btnsaveKeyPressed

    private void textprotocoladdressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textprotocoladdressKeyPressed
        // TODO add your handling code here:

       

    }//GEN-LAST:event_textprotocoladdressKeyPressed

    private void textbutnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textbutnKeyPressed
        // TODO add your handling code here:
        
        Imageverification id = new Imageverification();
        String path = id.imageupload();
        person.setPath(path);
    }//GEN-LAST:event_textbutnKeyPressed

    private void textprotocoladdressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textprotocoladdressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textprotocoladdressActionPerformed

    private void textdoBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textdoBKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_textdoBKeyPressed

    private void textvehicleserialnumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textvehicleserialnumKeyPressed
        // TODO add your handling code here:
        
    
           String vehiclelicensenum=textvehicleserialnum.getText();
        //get length of a string
        int length =vehiclelicensenum.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if (length<10){
                //editable true
                textvehicleserialnum.setEditable(true);
                lblserialvali.setText("Please enter Vehicle serial number  only!");
            }else{
                //not editable for length more than 10 digits 
                textvehicleserialnum.setEditable(false);
                lblserialvali.setText(" ");
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textvehicleserialnum.setEditable(true);
                
            }else{
                textvehicleserialnum.setEditable(false);
            }
                
            
            
        }
        
        
        
        
        
    }//GEN-LAST:event_textvehicleserialnumKeyPressed

    private void textdeviceidentifierKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textdeviceidentifierKeyPressed
        // TODO add your handling code here:
        
         String deviceidentifier=textdeviceidentifier.getText();
        //get length of a string
        int length =deviceidentifier.length();
        
        char c = evt.getKeyChar();
        
        //Check for number 0-9
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='8'){
            if (length<10){
                //editable true
                textdeviceidentifier.setEditable(true);
                lbldevicevali.setText("Please enter Device identifier  only!");
            }else{
                //not editable for length more than 10 digits 
                textdeviceidentifier.setEditable(false);
                lbldevicevali.setText(" ");
                
            }
        }else{
            //allow  keys 'back space' and 'delete'
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                //allow editable
                textdeviceidentifier.setEditable(true);
                
            }else{
                textdeviceidentifier.setEditable(false);
            }
                
            
            
        }
        
        
    }//GEN-LAST:event_textdeviceidentifierKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabeltitle;
    private javax.swing.JButton btnsave;
    private javax.swing.JLabel lblDeviceidentifier;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblFaxnum;
    private javax.swing.JLabel lblGeographicdata;
    private javax.swing.JLabel lblGeographicvali;
    private javax.swing.JLabel lblLicensenumber;
    private javax.swing.JLabel lblLinkedin;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameVali;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblTelephonenum;
    private javax.swing.JLabel lblbankaccountnumber;
    private javax.swing.JLabel lblbanknumvali;
    private javax.swing.JLabel lbldevicevali;
    private javax.swing.JLabel lbldobvali;
    private javax.swing.JLabel lblemail;
    private javax.swing.JLabel lblemailvali;
    private javax.swing.JLabel lblfaxvali;
    private javax.swing.JLabel lblhealthplannumber;
    private javax.swing.JLabel lblhealthvali;
    private javax.swing.JLabel lblinternetprotocoladdr;
    private javax.swing.JLabel lblipvali;
    private javax.swing.JLabel lbllicenseplate;
    private javax.swing.JLabel lbllicensevali;
    private javax.swing.JLabel lbllinkedinvali;
    private javax.swing.JLabel lblmedicalrecordnum;
    private javax.swing.JLabel lblmedicalvali;
    private javax.swing.JLabel lblphnovali;
    private javax.swing.JLabel lblserialvali;
    private javax.swing.JLabel lblssnvali;
    private javax.swing.JLabel lbluniquenumber;
    private javax.swing.JTextField textMedicalNumber;
    private javax.swing.JTextField textSSN;
    private javax.swing.JTextField textbankaccountnumber;
    private javax.swing.JButton textbutn;
    private javax.swing.JTextField textdeviceidentifier;
    private javax.swing.JTextField textdoB;
    private javax.swing.JTextField textemail;
    private javax.swing.JTextField textfaxnumber;
    private javax.swing.JTextField textgeographicData;
    private javax.swing.JTextField texthealthplan;
    private javax.swing.JTextField textlicensenumber;
    private javax.swing.JTextField textlinkedin;
    private javax.swing.JTextField textname;
    private javax.swing.JTextField textprotocoladdress;
    private javax.swing.JTextField texttelephonenum;
    private javax.swing.JTextField textuniqueidentifyingnumber;
    private javax.swing.JTextField textvehicleserialnum;
    // End of variables declaration//GEN-END:variables

    private void validateEmailID() {
        
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
         String emailAddress = "^[\\w-\\.+]*[\\w-\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
         if (!textemail.getText().isEmpty() && !textemail.getText().matches(emailAddress)){
                //isInValid = true;       
                lblemailvali .setText("Please enter correct Email ID") ; 
                
                    }
         else{
             lblemailvali .setText(" ") ; 
             
         }
    }

    
    

    
}
