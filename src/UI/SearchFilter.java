/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.CarDetails;
import Model.CarHistory;

import java.awt.*;
import java.awt.event.*;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.regex.*;
import javax.swing.*;
import javax.swing.table.*;

import javax.swing.table.DefaultTableModel;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
//import org.json.simple.JSONArray;
//import org.json.simple.JSONObject;
//import org.json.simple.parser.JSONParser;


 /*
 * @author swathisharma
 */
public class SearchFilter extends javax.swing.JFrame {

    /**
     * Creates new form SearchFilter
     */
    public SearchFilter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    
    private JTable table;
        private TableModel model;
            CarHistory history;
            
            
            
      public SearchFilter(CarHistory history) {
       this.history = history;
       int i = 0;
       int k=0;
       Object[][] rows = new Object[50][50];
       
        if (this.history.getHistory().size()!= 0){
                   for ( CarDetails cd: history.getHistory()){
                       rows[i][0] = cd.getCarModel();
                       rows[i][1] = cd.getNumOfSeats();
                       rows[i][2] = cd.Availability();
                       rows[i][3] = cd.getCarModelNumber();
                       rows[i][4] = cd.getCarSerialNumber();
                       rows[i][5] = cd.getRegDate();
                       rows[i][6] = cd.getYear();  
                       rows[i][6] = cd.isExpiry();
                       
                    i++;
                      
                   }
               }
//        else{
//     	        JSONParser parser = new JSONParser();        
//            
// 
//       try {
//            Object obj = parser.parse(new FileReader(history.getPath()));
//
//            JSONObject jsonObject = (JSONObject) obj;
//
//            JSONArray companyList = (JSONArray) jsonObject.get("cars");
//            Map<String, String> myMap = new HashMap<String, String>();
//            Iterator<JSONObject> iterator = companyList.iterator();
//            while (iterator.hasNext()) {
//                Object element = iterator.next();
//                String str = element.toString();
//                String[] pairs = str.split("},");
//
//                for (String pair : pairs) {
//                    String[] keyValue = pair.split(",");
//                    //Object[] row = new Object[20];
//
//                    for (int j = 0; j < keyValue.length; j++) {
//                        String newStr = keyValue[j].replace("{", "");
//                        String[] newKey = newStr.split(":");
//                       // row[j] =  newKey[1].replace("}","");
//                        rows[k][j] = newKey[1].replace("}","");
//                    }
//                    k++;    
//
//                }
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        } 
      setTitle("Search Table");
      Object columns[] = {"Car Make", "Number of Seats","Car Model", "Manufacture Year", "Car serial number", "Registration Date"};
      
      model = new DefaultTableModel(rows, columns) {
         public Class getColumnClass(int column) {
            Class returnValue;
            if((column >= 0) && (column < getColumnCount())) {
               returnValue = getValueAt(0, column).getClass();
            } else {
               returnValue = Object.class;
            }
            return returnValue;
         }
      };
      
      table = new JTable(model);
      final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
      table.setRowSorter(sorter);
      add(new JScrollPane(table), BorderLayout.CENTER);
      JPanel panel = new JPanel(new BorderLayout());
      JLabel label = new JLabel("Search");
      panel.add(label, BorderLayout.WEST);
      final JTextField filterText = new JTextField("");
      panel.add(filterText, BorderLayout.CENTER);
      add(panel, BorderLayout.NORTH);
      JButton button = new JButton("Search");
      button.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
            String text = filterText.getText();
            if(text.length() == 0) {
               sorter.setRowFilter(null);
            } else {
               try {
                  sorter.setRowFilter(RowFilter.regexFilter(text));
               } catch(PatternSyntaxException pse) {
                     System.out.println("Bad regex pattern");
               }
             }
         }
      });
      add(button, BorderLayout.SOUTH);
      setSize(500, 600);
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      setLocationRelativeTo(null);
      setVisible(true);
   }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

